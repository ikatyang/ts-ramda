import { CurriedFunction0, CurriedFunction1, CurriedFunction2, CurriedFunction3, CurriedFunction4, CurriedFunction5, CurriedFunction6 } from "./$curried-functions";
import { Variadic } from "./$types";
declare const curry: curry_0;
type curry_0 = {
    <R>(fn: () => R): curry_0arity_1<R>;
    <T1, R>(fn: (v1: T1) => R): curry_1arity_1<T1, R>;
    <T1, T2, R>(fn: (v1: T1, v2: T2) => R): curry_2arity_1<T1, T2, R>;
    <T1, T2, T3, R>(fn: (v1: T1, v2: T2, v3: T3) => R): curry_3arity_1<T1, T2, T3, R>;
    <T1, T2, T3, T4, R>(fn: (v1: T1, v2: T2, v3: T3, v4: T4) => R): curry_4arity_1<T1, T2, T3, T4, R>;
    <T1, T2, T3, T4, T5, R>(fn: (v1: T1, v2: T2, v3: T3, v4: T4, v5: T5) => R): curry_5arity_1<T1, T2, T3, T4, T5, R>;
    <T1, T2, T3, T4, T5, T6, R>(fn: (v1: T1, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): curry_6arity_1<T1, T2, T3, T4, T5, T6, R>;
    <R>(fn: Variadic<R>): curry_variadic_1<R>;
};
type curry_0arity_1<R> = CurriedFunction0<R>;
type curry_1arity_1<T1, R> = CurriedFunction1<T1, R>;
type curry_2arity_1<T1, T2, R> = CurriedFunction2<T1, T2, R>;
type curry_3arity_1<T1, T2, T3, R> = CurriedFunction3<T1, T2, T3, R>;
type curry_4arity_1<T1, T2, T3, T4, R> = CurriedFunction4<T1, T2, T3, T4, R>;
type curry_5arity_1<T1, T2, T3, T4, T5, R> = CurriedFunction5<T1, T2, T3, T4, T5, R>;
type curry_6arity_1<T1, T2, T3, T4, T5, T6, R> = CurriedFunction6<T1, T2, T3, T4, T5, T6, R>;
type curry_variadic_1<R> = Variadic<R>;
export = curry;
