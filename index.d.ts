export as namespace R;
export * from "./src/$curried-functions";
export * from "./src/$placeholder";
export * from "./src/$types";
import * as __ from "./src/__";
import * as add from "./src/add";
import * as addIndex from "./src/addIndex";
import * as adjust from "./src/adjust";
import * as all from "./src/all";
import * as allPass from "./src/allPass";
import * as always from "./src/always";
import * as and from "./src/and";
import * as any from "./src/any";
import * as anyPass from "./src/anyPass";
import * as ap from "./src/ap";
import * as aperture from "./src/aperture";
import * as append from "./src/append";
import * as apply from "./src/apply";
import * as applySpec from "./src/applySpec";
import * as ascend from "./src/ascend";
import * as assoc from "./src/assoc";
import * as assocPath from "./src/assocPath";
import * as binary from "./src/binary";
import * as bind from "./src/bind";
import * as both from "./src/both";
import * as call from "./src/call";
import * as clamp from "./src/clamp";
import * as clone from "./src/clone";
import * as comparator from "./src/comparator";
import * as complement from "./src/complement";
import * as concat from "./src/concat";
import * as cond from "./src/cond";
import * as contains from "./src/contains";
import * as countBy from "./src/countBy";
import * as dec from "./src/dec";
import * as defaultTo from "./src/defaultTo";
import * as descend from "./src/descend";
import * as difference from "./src/difference";
import * as differenceWith from "./src/differenceWith";
import * as dissoc from "./src/dissoc";
import * as dissocPath from "./src/dissocPath";
import * as divide from "./src/divide";
import * as drop from "./src/drop";
import * as dropLast from "./src/dropLast";
import * as dropLastWhile from "./src/dropLastWhile";
import * as dropRepeats from "./src/dropRepeats";
import * as dropRepeatsWith from "./src/dropRepeatsWith";
import * as dropWhile from "./src/dropWhile";
import * as either from "./src/either";
import * as empty from "./src/empty";
import * as endsWith from "./src/endsWith";
import * as inc from "./src/inc";
import * as intersection from "./src/intersection";
import * as intersectionWith from "./src/intersectionWith";
import * as map from "./src/map";
import * as mathMod from "./src/mathMod";
import * as mean from "./src/mean";
import * as median from "./src/median";
import * as modulo from "./src/modulo";
import * as multiply from "./src/multiply";
import * as nAry from "./src/nAry";
import * as negate from "./src/negate";
import * as or from "./src/or";
import * as prepend from "./src/prepend";
import * as product from "./src/product";
import * as startsWith from "./src/startsWith";
import * as subtract from "./src/subtract";
import * as sum from "./src/sum";
import * as symmetricDifference from "./src/symmetricDifference";
import * as symmetricDifferenceWith from "./src/symmetricDifferenceWith";
import * as take from "./src/take";
import * as takeLast from "./src/takeLast";
import * as takeLastWhile from "./src/takeLastWhile";
import * as takeWhile from "./src/takeWhile";
import * as unary from "./src/unary";
import * as union from "./src/union";
import * as unionWith from "./src/unionWith";
export { __, add, addIndex, adjust, all, allPass, always, and, any, anyPass, ap, aperture, append, apply, applySpec, ascend, assoc, assocPath, binary, bind, both, call, clamp, clone, comparator, complement, concat, cond, contains, countBy, dec, defaultTo, descend, difference, differenceWith, dissoc, dissocPath, divide, drop, dropLast, dropLastWhile, dropRepeats, dropRepeatsWith, dropWhile, either, empty, endsWith, inc, intersection, intersectionWith, map, mathMod, mean, median, modulo, multiply, nAry, negate, or, prepend, product, startsWith, subtract, sum, symmetricDifference, symmetricDifferenceWith, take, takeLast, takeLastWhile, takeWhile, unary, union, unionWith };
